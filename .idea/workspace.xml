<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6e5d5adc-4d0a-4b6d-b89e-22c71f2d83a6" name="Changes" comment="feat(backend):&#10;add CartItem &#10;TODO: implementing cartItem FrontEnd">
      <change afterPath="$PROJECT_DIR$/README" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/src/main/java/com/catalogo/backend/config/RedisConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/src/main/java/com/catalogo/backend/dto/CartItem.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/src/main/java/com/catalogo/backend/service/CartService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/nginx.conf" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/admin/admin-routing.module.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/admin/admin.module.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/admin/product-crud/product-crud.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/admin/product-crud/product-crud.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/app-routing.module.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/components/cart/cart.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/components/cart/cart.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/components/catalog/catalog.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/components/catalog/catalog.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/components/checkout/checkout.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/components/checkout/checkout.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/components/login/login.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/components/login/login.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/components/product-detail/product-detail.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/components/product-detail/product-detail.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/guards/admin.guard.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/guards/auth.guard.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/interceptors/auth.interceptor.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/services/auth.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/services/cart.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/services/order.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/services/product.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/enviroments/environment.prod.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/polyfills.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/src/main/java/com/catalogo/backend/controller/ProductController.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main/java/com/catalogo/backend/controller/ProductController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/src/main/java/com/catalogo/backend/dto/ProductDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main/java/com/catalogo/backend/dto/ProductDTO.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/src/main/java/com/catalogo/backend/service/ProductService.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main/java/com/catalogo/backend/service/ProductService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/angular.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/angular.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/app.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/app.component.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/app.component.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/app.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/app.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/app.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/app.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/tsconfig.app.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/tsconfig.app.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/tsconfig.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" show_ignored="true" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="UPDATE_TYPE" value="REBASE" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="useMavenConfig" value="true" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectId" id="31dJQ550sn2cwDNogBDuh5ziATY" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "jdk.selected.JAVA_MODULE": "corretto-17",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_interpreter_path": "node",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "project.propVCSSupport.DirectoryMappings",
    "spring.configuration.checksum": "b43fdd98b1fd705ae4c3a10cf25aad8a",
    "ts.external.directory.path": "C:\\Users\\miche\\OneDrive\\Desktop\\JuniorProject\\catalogo-app\\app-catalogo\\frontend\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="ReactorSettings">
    <option name="notificationShown" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\miche\OneDrive\Desktop\JuniorProject\catalogo-app\app-catalogo\infra" />
      <recent name="C:\Users\miche\OneDrive\Desktop\JuniorProject\catalogo-app\app-catalogo\grafana" />
    </key>
  </component>
  <component name="RunManager" selected="Spring Boot.CatalogoAppApplication">
    <configuration name="Angular Application (frontend)" type="JavascriptDebugType" uri="http://localhost:4200">
      <method v="2" />
    </configuration>
    <configuration name="BackendApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="backend" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.catalogo.backend.BackendApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CatalogoAppApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="backend" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.catalogo.backend.CatalogoAppApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.backend: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="backend" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="Angular CLI Server (frontend)" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/frontend/package.json" />
      <command value="run" />
      <scripts>
        <script value="start" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.backend: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6e5d5adc-4d0a-4b6d-b89e-22c71f2d83a6" name="Changes" comment="" />
      <created>1755847999684</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1755847999684</updated>
      <workItem from="1755848000168" duration="13356000" />
      <workItem from="1756115180954" duration="17055000" />
    </task>
    <task id="LOCAL-00001" summary="init commit: create project structure BE, initialize FE">
      <created>1755850235272</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1755850235272</updated>
    </task>
    <task id="LOCAL-00002" summary="init commit: create project structure BE, initialize FE">
      <created>1755850391615</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1755850391615</updated>
    </task>
    <task id="LOCAL-00003" summary="init commit: clean repo">
      <created>1755851093065</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1755851093065</updated>
    </task>
    <task id="LOCAL-00004" summary="feat(backend):&#10;&#10;Configurato progetto Spring Boot 3 (Java 17) con dipendenze: Web, Security, JPA, Validation, Cache, Redis, Actuator, OpenAPI.&#10;&#10;Creato modello dati: User, Product, Order, OrderItem con repository JPA.&#10;&#10;Implementata autenticazione JWT con ruoli USER e ADMIN.&#10;&#10;Endpoint /auth/register e /auth/login&#10;&#10;JwtUtil, JwtAuthenticationFilter e configurazione Security&#10;&#10;Seeder automatico per utente admin predefinito&#10;&#10;CRUD prodotti (protetto da ruolo ADMIN), catalogo pubblico con paginazione e filtri.&#10;&#10;Creazione ordini con OrderService e gestione OrderItem.&#10;&#10;Configurato caching Redis su lista e dettaglio prodotti.&#10;&#10;Aggiunto Actuator con endpoint Prometheus per osservabilità.&#10;&#10;Integrato Swagger/OpenAPI UI per documentazione API.&#10;&#10;Dockerfile backend + configurazione docker-compose.yml con Postgres e Redis.">
      <created>1756117753493</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1756117753494</updated>
    </task>
    <task id="LOCAL-00005" summary="feat(backend):&#10;add LoginRequest">
      <created>1756117815628</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1756117815628</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/backend" />
    </ignored-roots>
    <MESSAGE value="init commit: create project structure BE, initialize FE" />
    <MESSAGE value="init commit: clean repo" />
    <MESSAGE value="feat(backend):&#10;&#10;Configurato progetto Spring Boot 3 (Java 17) con dipendenze: Web, Security, JPA, Validation, Cache, Redis, Actuator, OpenAPI.&#10;&#10;Creato modello dati: User, Product, Order, OrderItem con repository JPA.&#10;&#10;Implementata autenticazione JWT con ruoli USER e ADMIN.&#10;&#10;Endpoint /auth/register e /auth/login&#10;&#10;JwtUtil, JwtAuthenticationFilter e configurazione Security&#10;&#10;Seeder automatico per utente admin predefinito&#10;&#10;CRUD prodotti (protetto da ruolo ADMIN), catalogo pubblico con paginazione e filtri.&#10;&#10;Creazione ordini con OrderService e gestione OrderItem.&#10;&#10;Configurato caching Redis su lista e dettaglio prodotti.&#10;&#10;Aggiunto Actuator con endpoint Prometheus per osservabilità.&#10;&#10;Integrato Swagger/OpenAPI UI per documentazione API.&#10;&#10;Dockerfile backend + configurazione docker-compose.yml con Postgres e Redis." />
    <MESSAGE value="feat(backend):&#10;add LoginRequest" />
    <MESSAGE value="feat(backend):&#10;add CartItem &#10;TODO: implementing cartItem FrontEnd" />
    <option name="LAST_COMMIT_MESSAGE" value="feat(backend):&#10;add CartItem &#10;TODO: implementing cartItem FrontEnd" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>